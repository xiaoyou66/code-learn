(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{436:function(t,e,a){"use strict";a.r(e);var r=a(21),s=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("原文")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://developer.aliyun.com/article/741747",target:"_blank",rel:"noopener noreferrer"}},[t._v("Go 开发关键技术指南 | 带着服务器编程金刚经走进 2020 年(内含超全知识大图）-阿里云开发者社区 (aliyun.com)"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"interfaces"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#interfaces"}},[t._v("#")]),t._v(" Interfaces")]),t._v(" "),a("p",[t._v("Go 在类型和接口上的思考是：")]),t._v(" "),a("ul",[a("li",[t._v("Go 类型系统并不是一般意义的 OO，并不支持虚函数；")]),t._v(" "),a("li",[t._v("Go 的接口是隐含实现，更灵活，更便于适配和替换；")]),t._v(" "),a("li",[t._v("Go 支持的是组合、小接口、组合+小接口；")]),t._v(" "),a("li",[t._v("接口设计应该考虑正交性，组合更利于正交性。")])]),t._v(" "),a("h3",{attrs:{id:"type-system"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#type-system"}},[t._v("#")]),t._v(" Type System")]),t._v(" "),a("p",[t._v("Go 的类型系统是比较容易和 C++/Java 混淆的，特别是习惯于类体系和虚函数的思路后，很容易想在 Go 走这个路子，可惜是走不通的。而 interface 因为太过于简单，而且和 C++/Java 中的概念差异不是特别明显，所以本章节专门分析 Go 的类型系统。")])])}),[],!1,null,null,null);e.default=s.exports}}]);